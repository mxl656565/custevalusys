<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.waymap.custevalusys.mapper.EvaluationMapper">
  <resultMap id="BaseResultMap" type="com.waymap.custevalusys.model.Evaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="question" jdbcType="INTEGER" property="question" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="evaluatime" jdbcType="TIMESTAMP" property="evaluatime" />
  </resultMap>
  <resultMap id="EvaluationResultMap" type="com.waymap.custevalusys.dto.ConsultantEvalution">
    <result column="question" jdbcType="INTEGER" property="question" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="evaluatime" jdbcType="TIMESTAMP" property="evaluatime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="consultant_name" jdbcType="VARCHAR" property="consultantName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, question, points, evaluatime
  </sql>
  <select id="selectByExample" parameterType="com.waymap.custevalusys.model.EvaluationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectEvaluationByProjectId" resultMap="EvaluationResultMap">
    select n.username,consultant.`name` as consultant_name,n.question,n.points,n.evaluatime from consultant,
    (select cer.consultant_id,cer.evaluation_id,m.question,m.points,m.evaluatime,m.username from consultant_evaluation_relation as cer,
    (select b.username,e.id,e.evaluatime,e.points,e.question from evaluation e,
    (select cust.username,evaluation_id from customer cust,customer_evaluation_relation a where cust.project_id = #{projectId}) as b where e.id = b.evaluation_id)as m where cer.evaluation_id = m.id) AS n WHERE consultant.id = n.consultant_id
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.waymap.custevalusys.model.EvaluationExample">
    delete from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertOneRecAndGetId" parameterType="com.waymap.custevalusys.model.Evaluation" useGeneratedKeys="true" keyProperty="id">
	insert into evaluation(question,points,evaluatime) values(#{question}, #{points},#{evaluatime})
  </insert>
  <insert id="insertSelective" parameterType="com.waymap.custevalusys.model.Evaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="question != null">
        question,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="evaluatime != null">
        evaluatime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="question != null">
        #{question,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="evaluatime != null">
        #{evaluatime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.waymap.custevalusys.model.EvaluationExample" resultType="java.lang.Long">
    select count(*) from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evaluation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=INTEGER},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.evaluatime != null">
        evaluatime = #{record.evaluatime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evaluation
    set id = #{record.id,jdbcType=INTEGER},
      question = #{record.question,jdbcType=INTEGER},
      points = #{record.points,jdbcType=INTEGER},
      evaluatime = #{record.evaluatime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.waymap.custevalusys.model.Evaluation">
    update evaluation
    <set>
      <if test="question != null">
        question = #{question,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="evaluatime != null">
        evaluatime = #{evaluatime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.waymap.custevalusys.model.Evaluation">
    update evaluation
    set question = #{question,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      evaluatime = #{evaluatime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>